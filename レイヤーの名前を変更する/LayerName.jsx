//選択してるオブジェクトvar actDoc = activeDocument;//選択してるレイヤーvar layObj = activeDocument.activeLayer;//リンクされているレイヤー配列var allselLinkLys = new Array();//選択されている数var allselLinkLysLength;text = prompt("レイヤ名",layObj.name);//キャンセル押されたら、そのままif(text == null) {}else {UnLinkSelLys();try　{LinkSelLys();}catch(e)　{}finally{}SelLy();UnLinkSelLys();//一つ以上選択されてたら	if(allselLinkLysLength > 1) {		//最初の文字が?だったら		if(text.substr(0, 1) == "?") {			nameSet4();		}		else {		if(text.substr(0, 1) == "_") {			nameSet3();		}		else {			//最後の文字が_だったら			if(text.substr(text.length -1, 1) == "_") {				nameSet2();			}			else {				flag = confirm("連番にしますか？" + "（1〜"+allselLinkLysLength+"）");				if (flag == true) nameSet2(); else nameSet();			}		}		}	}	else {		//最初の文字が?だったら		if(text.substr(0, 1) == "?") {			nameSet4();		}		else {		if(text.substr(0, 1) == "_") {			nameSet3();		}		else {			//最後の文字が_だったら			if(text.substr(text.length -1, 1) == "_") {				nameSet2();			}			else {				nameSet();			}		}		}	}ReSelected();}//入力通り名前入れるfunction nameSet() {	for(i=0;i<allselLinkLysLength;i++)	{		allselLinkLys[i].name = text;	}	allselLinkLys[0].name = text;}//連番function nameSet2() {	for(i=0;i<allselLinkLysLength;i++)	{		if (i < 9) var num = "0" + (i+1); else var num = (i+1);		allselLinkLys[i].name = text + num;	}	allselLinkLys[0].name = text + "0" + 1;}//_が最初についている場合、最後に「_test」のように入れるfunction nameSet3() {	if(allselLinkLysLength > 1) {	for(i=0;i<allselLinkLysLength;i++)	{		allselLinkLys[i].name = allselLinkLys[i].name + text;	}	allselLinkLys[0].name = allselLinkLys[0].name + text;	}	else{		allselLinkLys[0].name = allselLinkLys[0].name + text;	}}//?が最初についている場合、最初に?ぬきの文字をつけるfunction nameSet4() {	if(allselLinkLysLength > 1) {	for(i=0;i<allselLinkLysLength;i++)	{		allselLinkLys[i].name = text.substr(1, text.length) + allselLinkLys[i].name;	}	allselLinkLys[0].name = text.substr(1, text.length) + allselLinkLys[0].name;	}	else{		allselLinkLys[0].name = text.substr(1, text.length) + allselLinkLys[i].name;	}}//選択レイヤーをリンク付けfunction LinkSelLys() {	var lID1 = stringIDToTypeID( "linkSelectedLayers" );	var lDesc1 = new ActionDescriptor();	var lID2 = charIDToTypeID( "null" );	var lRef1 = new ActionReference();	var lID3 = charIDToTypeID( "Lyr " );	var lID4 = charIDToTypeID( "Ordn" );	var lID5 = charIDToTypeID( "Trgt" );	lRef1.putEnumerated( lID3, lID4, lID5 );	lDesc1.putReference( lID2, lRef1 );	executeAction( lID1, lDesc1, DialogModes.NO );}//選択レイヤーのリンク解除function UnLinkSelLys() {	var uID1 = stringIDToTypeID( "unlinkSelectedLayers" );	var uDesc1 = new ActionDescriptor();	var uID2 = charIDToTypeID( "null" );	var uRef1 = new ActionReference();	var uID3 = charIDToTypeID( "Lyr " );	var uID4 = charIDToTypeID( "Ordn" );	var uID5 = charIDToTypeID( "Trgt" );	uRef1.putEnumerated( uID3, uID4, uID5 );	uDesc1.putReference( uID2, uRef1 );	executeAction( uID1, uDesc1, DialogModes.NO );}//下のレイヤー選択function selectBottom() {	var idslct = charIDToTypeID( "slct" );	var desc1337 = new ActionDescriptor();	var idnull = charIDToTypeID( "null" );	var ref904 = new ActionReference();	var idLyr = charIDToTypeID( "Lyr " );	var idOrdn = charIDToTypeID( "Ordn" );	var idBckw = charIDToTypeID( "Bckw" );	ref904.putEnumerated( idLyr, idOrdn, idBckw );	desc1337.putReference( idnull, ref904 );	var idselectionModifier = stringIDToTypeID( "selectionModifier" );	var idselectionModifierType = stringIDToTypeID( "selectionModifierType" );	var idaddToSelection = stringIDToTypeID( "addToSelection" );	desc1337.putEnumerated( idselectionModifier, idselectionModifierType, idaddToSelection );	var idMkVs = charIDToTypeID( "MkVs" );	desc1337.putBoolean( idMkVs, false );	executeAction( idslct, desc1337, DialogModes.NO );}//リンクされたレイヤーを取得function SelLy() {	var selLinkLys = layObj.linkedLayers;	linkLysLength = selLinkLys.length;	allselLinkLys[0] = layObj;	u = 1;	for(i=0;i<linkLysLength;i++)	{		allselLinkLys[u] = selLinkLys[i];		u++;	}	allselLinkLysLength = allselLinkLys.length}//選択(Ctrl+Click)function ToggleSelect(TslName) {	var oID12 = charIDToTypeID( "slct" );	var oDesc3 = new ActionDescriptor();	var oID13 = charIDToTypeID( "null" );	var oRef3 = new ActionReference();	var oID14 = charIDToTypeID( "Lyr " );	oRef3.putName( oID14, TslName );	oDesc3.putReference( oID13, oRef3 );	var oID15 = stringIDToTypeID( "selectionModifier" );	var oID16 = stringIDToTypeID( "selectionModifierType" );	var oID17 = stringIDToTypeID( "addToSelection" );	oDesc3.putEnumerated( oID15, oID16, oID17 );	var oID18 = charIDToTypeID( "MkVs" );	oDesc3.putBoolean( oID18, false );	executeAction( oID12, oDesc3, DialogModes.NO );}//元のレイヤー選択状態に復元function ReSelected() {	activeDocument.activeLayer = allselLinkLys[0];	for(i=0;i<allselLinkLysLength;i++) {		ToggleSelect(allselLinkLys[i].name);	}}